" Setup Plugin
call plug#begin('~/.vim/plugged')
" Ghost Text Server to edit Text Areas in Browser
Plug 'pandysong/ghost-text.vim'
"
" Comments
Plug 'chrisbra/vim-commentary'

"Color Theme -  Sublime Monokai
Plug 'erichdongubler/vim-sublime-monokai'
Plug 'chriskempson/vim-tomorrow-theme'
Plug 'morhetz/gruvbox'

"Comments"
Plug 'tpope/vim-commentary'

" Editorconfig
Plug 'editorconfig/editorconfig-vim'

" Git Gutter
Plug 'airblade/vim-gitgutter', {'on': 'GitGutterEnable'}

" File Finder - FZF
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" File Menu - NERD Tree Sidebar
Plug 'scrooloose/nerdtree'

" Status Bar - Air Bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Lint Engine
Plug 'dense-analysis/ale'

" Language Server
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'prabirshrestha/vim-lsp'

" Git integration - Fugitive
Plug 'tpope/vim-fugitive'

" Prettier
Plug 'prettier/vim-prettier', {
  \ 'do': 'npm install',
  \ 'branch': 'release/1.x',
  \ 'for': [
    \ 'javascript',
    \ 'typescript',
    \ 'css',
    \ 'less',
    \ 'scss',
    \ 'json',
    \ 'markdown',
    \ 'vue',
    \ 'html'
    \ ] }

" Typescript
Plug 'leafgarland/typescript-vim' " Syntax Highlighting

" Vue 
Plug 'posva/vim-vue'

" Plug 'Quramy/tsuquyomi' " Language Server
Plug 'HerringtonDarkholme/yats.vim' " TS Syntax

" C#
Plug 'sheerun/vim-polyglot' " Syntax Highlighting
call plug#end()

" Use UndoFiles
" Let's save undo info!
if !isdirectory($HOME."/.vim")
    call mkdir($HOME."/.vim", "", 0770)
endif
if !isdirectory($HOME."/.vim/undo-dir")
    call mkdir($HOME."/.vim/undo-dir", "", 0700)
endif
set undodir=~/.vim/undo-dir
set undofile

" General VIM Settings
set number relativenumber 
syntax on
colorscheme gruvbox
set bg=dark

GitGutterEnable

set tabstop=4
set shiftwidth=4
set smartindent
set autoindent
set expandtab
set softtabstop=4

" Faster Esc from Modes"
set timeoutlen=1000 ttimeoutlen=0

" Tabs
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
let g:airline_theme='base16_gruvbox_dark_hard'


" Splits
set splitbelow
set splitright

" add html syntax to dotnet razor files
autocmd BufNewFile,BufRead *.cshtml set syntax=html

" NERDCommenter
filetype plugin on

"NERD Tree"
let NERDTreeMinimalUI=1

" FZF 
let g:fzf_colors =
\ { "fg":      ["fg", "Normal"],
  \ "bg":      ["bg", "Normal"],
  \ "hl":      ["fg", "IncSearch"],
  \ "fg+":     ["fg", "CursorLine", "CursorColumn", "Normal"],
  \ "bg+":     ["bg", "CursorLine", "CursorColumn"],
  \ "hl+":     ["fg", "IncSearch"],
  \ "info":    ["fg", "IncSearch"],
  \ "border":  ["fg", "Ignore"],
  \ "prompt":  ["fg", "Comment"],
  \ "pointer": ["fg", "IncSearch"],
  \ "marker":  ["fg", "IncSearch"],
  \ "spinner": ["fg", "IncSearch"],
  \ "header":  ["fg", "WildMenu"] }

" COC Configuration
source ~/dotfiles/vim/vimrc_coc

" Commands
command Gst Gstatus

" Keymap
silent! nmap <C-P> :GFiles<CR>
map <C-n> :NERDTreeToggle<CR>
nnoremap <C-I> :Prettier<CR>
nnoremap <C-Left> :bprevious<CR>
nnoremap <C-Right> :bnext<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" TypeScript
" Linter Settings
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'typescript': ['tsserver', 'tslint'],
\   'vue': ['eslint']
\}
