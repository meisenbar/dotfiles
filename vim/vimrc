" Setup Plugin
call plug#begin('~/.vim/plugged')
" TableMode
Plug 'dhruvasagar/vim-table-mode'

" Emmet
Plug 'mattn/emmet-vim'

" TagBar Plugin
Plug 'majutsushi/tagbar'

" Surround Brackets
Plug 'tpope/vim-surround'

" unimpaired ][ shortcuts
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-repeat'

" CodeSnippets
Plug 'honza/vim-snippets'

" Start Screen
Plug 'mhinz/vim-startify'

" Ghost Text Server to edit Text Areas in Browser
"Plug 'pandysong/ghost-text.vim'

"Color Theme -  Sublime Monokai
Plug 'morhetz/gruvbox'

"Comments"
Plug 'tomtom/tcomment_vim'

" Editorconfig
Plug 'editorconfig/editorconfig-vim'

" Git Gutter
Plug 'airblade/vim-gitgutter', {'on': 'GitGutterEnable'}

" File Finder - FZF
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" File Menu - NERD Tree Sidebar
Plug 'scrooloose/nerdtree'

" Status Bar - Air Bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Language Server
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Git integration - Fugitive
Plug 'tpope/vim-fugitive'

"vue
Plug 'posva/vim-vue' 

" Syntax highlighting
Plug 'sheerun/vim-polyglot'

" Omnisharp
Plug 'OmniSharp/omnisharp-vim'

" Ale Linter for C#
Plug 'dense-analysis/ale'
call plug#end()

" Tell ALE to use OmniSharp for linting C# files, and no other linters.
let g:ale_linters = {
	\ 'cs': ['OmniSharp'],
	\ 'javascript': ['eslint'], 
	\ 'typescript': ['eslint'],
	\ 'vue': ['eslint']
\ }

let g:ale_fixers = {
	\ 'cs': ['OmniSharp'],
	\ 'javascript': ['prettier', 'eslint'], 
	\ 'typescript': ['prettier', 'eslint'],
	\ 'vue': ['prettier', 'eslint']
\ }

let g:ale_sign_warning = ' '
let g:ale_sign_error = ' '
let g:ale_set_balloons = 1

" Use UndoFiles
" Let's save undo info!
if !isdirectory($HOME."/.vim")
    call mkdir($HOME."/.vim", "", 0770)
endif
if !isdirectory($HOME."/.vim/undo-dir")
    call mkdir($HOME."/.vim/undo-dir", "", 0700)
endif
set undodir=~/.vim/undo-dir
set undofile

" General VIM Settings
set ttyfast
set number relativenumber 
syntax on
colorscheme gruvbox
set bg=dark

GitGutterEnable

set tabstop=4
set shiftwidth=4
set softtabstop=4
set smartindent
set autoindent
set noexpandtab

" Faster Esc from Modes"
set timeoutlen=1000 ttimeoutlen=0

" Tabs
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
let g:airline_theme='base16_gruvbox_dark_hard'

" Splits
set splitbelow
set splitright

" add html syntax to dotnet razor files
autocmd BufNewFile,BufRead *.cshtml set syntax=html

"NERD Tree"
let NERDTreeMinimalUI=1

" FZF 
let g:fzf_colors =
\ { "fg":      ["fg", "Normal"],
  \ "bg":      ["bg", "Normal"],
  \ "hl":      ["fg", "IncSearch"],
  \ "fg+":     ["fg", "CursorLine", "CursorColumn", "Normal"],
  \ "bg+":     ["bg", "CursorLine", "CursorColumn"],
  \ "hl+":     ["fg", "IncSearch"],
  \ "info":    ["fg", "IncSearch"],
  \ "border":  ["fg", "Ignore"],
  \ "prompt":  ["fg", "Comment"],
  \ "pointer": ["fg", "IncSearch"],
  \ "marker":  ["fg", "IncSearch"],
  \ "spinner": ["fg", "IncSearch"],
  \ "header":  ["fg", "WildMenu"] }

" Keymap
silent! nmap <C-P> :GFiles<CR>
map <C-n> :NERDTreeToggle<CR>
nnoremap <C-I> :ALEFix<CR>
nnoremap <C-Left> :bprevious<CR>
nnoremap <C-Right> :bnext<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Commands
command Gst Gstatus
cmap w!! w !sudo tee % > /dev/null
command! -nargs=0 Prettier :call CocAction('runCommand', 'prettier.formatFile')

" Omnisharp
source ~/dotfiles/vim/vimrc_omnisharp

" Coc Configuration
source ~/dotfiles/vim/vimrc_coc
